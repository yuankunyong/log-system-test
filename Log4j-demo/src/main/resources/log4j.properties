# 配置rootlogger根日志记录器对象
# 前一个参数表示输出日志级别，后一个参数表示使用哪种类型的appender
log4j.rootLogger = trace,dailyRollingFile
# 配置consoleAppender对象
log4j.appender.console = org.apache.log4j.ConsoleAppender
# 配置日志输出格式对象
log4j.appender.console.layout = org.apache.log4j.PatternLayout
# 配置具体的日志输出格式
log4j.appender.console.layout.conversionPattern = [%-10p]%r %l  %d{yyyy-MM-dd HH:mm:ss.SSS} %m%n

# 测试PatterLayout的使用
# 配置fileAppender对象
log4j.appender.file = org.apache.log4j.FileAppender
# 配置日志输出格式对象
log4j.appender.file.layout = org.apache.log4j.PatternLayout
# 配置具体的日志输出格式
log4j.appender.file.layout.conversionPattern = [%-10p]%r %l  %d{yyyy-MM-dd HH:mm:ss.SSS} %m%n
# 配置日志输出文件路径
log4j.appender.file.file = ./logs/log4j.log
# 配置输出文件编码
log4j.appender.file.encoding = UTF-8

# 测试使用FileAppender的实现类RollingFile，根据文件大小切分日志文件
# 配置RollingFileAppender对象
log4j.appender.rollingFile = org.apache.log4j.RollingFileAppender
# 配置日志输出格式对象
log4j.appender.rollingFile.layout = org.apache.log4j.PatternLayout
# 配置具体的日志输出格式
log4j.appender.rollingFile.layout.conversionPattern = [%-10p]%r %l  %d{yyyy-MM-dd HH:mm:ss.SSS} %m%n
# 配置日志输出文件路径
log4j.appender.rollingFile.file = ./logs/log4j.log
# 配置输出文件编码
log4j.appender.rollingFile.encoding = UTF-8
# 指定日志文件的最大容量，超出之后会切分文件
log4j.appender.rollingFile.maxFileSize = 1MB
# 指定日志文件的最大数量，超出之后，会按时间顺序覆盖最早的日志信息
log4j.appender.rollingFile.maxBackupIndex = 10

# 测试FileAppender的实现类DailyRollingFileAppender，根据日期组织日志文件
# 配置DailyRollingFileAppender对象
log4j.appender.dailyRollingFile = org.apache.log4j.DailyRollingFileAppender
# 配置日志输出格式对象
log4j.appender.dailyRollingFile.layout = org.apache.log4j.PatternLayout
# 配置具体的日志输出格式
log4j.appender.dailyRollingFile.layout.conversionPattern = [%-10p]%r %l  %d{yyyy-MM-dd HH:mm:ss.SSS} %m%n
# 配置日志输出文件路径
log4j.appender.dailyRollingFile.file = ./logs/log4j.log
# 配置输出文件编码
log4j.appender.dailyRollingFile.encoding = UTF-8
# 指定按照日期打印日志的规则
log4j.appender.dailyRollingFile.datePattern = '.'yyyy-MM-dd-HH-mm-ss