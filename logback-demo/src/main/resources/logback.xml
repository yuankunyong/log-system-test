<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!-- 配置属性值，以后可以直接使用，使用方式：${attr} -->
    <property name="pattern" value="[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} %c %M %L [%thread] %m%n"></property>
    <property name="log_dir" value="./logs"></property>

    <!--配置appender-->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 控制输出流对象，默认为System.out，修改为System.err-->
        <target>System.err</target>
        <!-- 配置日志消息输出格式对象 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!-- 配置日志消息输出格式模板 -->
            <pattern>${pattern}</pattern>
        </encoder>
    </appender>

    <!-- 配置FileAppender，输出日志信息到文件中 -->
    <appender name="file" class="ch.qos.logback.core.FileAppender">
        <!-- 指定输出路径 -->
        <file>${log_dir}/logback.log</file>
        <!-- 配置日志消息输出格式对象 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!-- 配置日志消息输出格式模板 -->
            <pattern>${pattern}</pattern>
        </encoder>
    </appender>

    <!-- 配置FileAppender，输出日志信息HTML文件中 -->
    <appender name="HTMLFile" class="ch.qos.logback.core.FileAppender">
        <!-- 指定文件输出路径 -->
        <file>${log_dir}/logback.html</file>
        <!-- 配置日志消息输出格式对象 -->
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <!-- 定义输出html文件的layout -->
            <layout class="ch.qos.logback.classic.html.HTMLLayout">
                <!-- 定义pattern -->
                <pattern>%level%d{yyyy-MM-dd HH:mm:ss.SSS}%c%M%L%thread%m</pattern>
            </layout>
        </encoder>
    </appender>

    <!-- 使用rollingFile对日志文档拆分和归档压缩-->
    <appender name="rollingFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 指定输出路径 -->
        <file>${log_dir}/rolling_logback.log</file>
        <!-- 配置日志消息输出格式对象 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!-- 配置日志消息输出格式模板 -->
            <pattern>${pattern}</pattern>
        </encoder>
        <!-- 设置拆分规则 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 设置按日期拆分格式 -->
            <fileNamePattern>${log_dir}/rolling.%d{yyyy-MM-dd}.log%i</fileNamePattern>
            <!-- 设置按文件大小拆分，此种拆分方法会先按照日期拆分，然后按照文件大小拆分 -->
            <maxFileSize>1MB</maxFileSize>
        </rollingPolicy>
        <!-- logback还提供了过滤器功能，下面用日志级别过滤器进行测试 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- 异步日志，提高性能 -->
    <appender name="aysnc" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="rollingFile"/>
    </appender>

    <!-- root logger 配置 -->
    <root level="ALL">
        <!-- 配置appender引用 -->
        <appender-ref ref="console"></appender-ref>
        <appender-ref ref="rollingFile"></appender-ref>
    </root>

    <!-- 自定义Logger对象
        additivity属性用于设置是否继承RootLogger
    -->
    <logger name="com.logback" level="info" additivity="false">
        <!-- 配置自定义logger的appender对象 -->
        <appender-ref ref="console"></appender-ref>
    </logger>
</configuration>